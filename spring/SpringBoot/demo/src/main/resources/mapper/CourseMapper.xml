<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.CourseMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.model.Course">
    <constructor>
      <idArg column="id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="teacher" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="type" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="credit" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, name, teacher, type, credit
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from course
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.Course">
    insert into course (id, name, teacher, 
      type, credit)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{teacher,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{credit,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.Course">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="teacher != null">
        teacher,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="credit != null">
        credit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="teacher != null">
        #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="credit != null">
        #{credit,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.Course">
    update course
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="teacher != null">
        teacher = #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="credit != null">
        credit = #{credit,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.Course">
    update course
    set name = #{name,jdbcType=VARCHAR},
      teacher = #{teacher,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      credit = #{credit,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>